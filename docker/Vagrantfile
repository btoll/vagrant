# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
    config.vm.box = "debian/bullseye64"
    config.vm.hostname = "vagrant-docker"

    config.vm.synced_folder ".", "/vagrant"
    config.vm.synced_folder "/home/btoll/dotfiles", "/vagrant/dotfiles"

    config.ssh.forward_agent = true

    config.vm.provider "virtualbox" do |vb|
        vb.cpus = 2
        vb.memory = 8192
    end

    config.vm.provision "shell", inline: <<-SHELL
        apt-get update && \
        apt-get install -y \
            bridge-utils \
            build-essential \
            ca-certificates \
            curl \
            git \
            gnupg \
            tcpdump

        # https://docs.docker.com/engine/install/debian/
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/debian/gpg \
            | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

        echo \
          "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] \
          https://download.docker.com/linux/debian \
          "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" \
          | tee /etc/apt/sources.list.d/docker.list > /dev/null

        # Install Docker Engine.
        apt-get update && \
        apt-get install -y \
            containerd.io \
            docker-buildx-plugin \
            docker-ce \
            docker-ce-cli \
            docker-compose-plugin

        usermod -aG docker vagrant
    SHELL

    config.vm.provision :ansible_local do |ansible|
        ansible.become = true
        ansible.groups = {
            "servers" => ["default"]
        }

        ansible.compatibility_mode = "2.0"
        ansible.playbook = "playbook.yml"
        ansible.version = "latest"
        ansible.extra_vars = {
            ansible_python_interpreter: "/usr/bin/python3"
        }
        ansible.galaxy_roles_path = nil
        ansible.galaxy_role_file = "requirements.yml"
        ansible.galaxy_command = "ansible-galaxy install --role-file=%{role_file} --roles-path=%{roles_path}"
    end
end

