# -*- mode: ruby -*-
# vi: set ft=ruby :

MANAGER_NAME = "manager1"
WORKER_COUNT = 2

Vagrant.configure("2") do |config|
    config.vm.define MANAGER_NAME do |subconfig|
        subconfig.vm.box = "ubuntu/bionic64"
        subconfig.vm.hostname = MANAGER_NAME

        # Internal network.
        subconfig.vm.network "private_network", ip: "192.168.99.100", virtualbox__intnet: "intnet1"

        subconfig.vm.provider "virtualbox" do |v|
            v.name = MANAGER_NAME
        end
    end

    (0..WORKER_COUNT-1).each do |i|
        machine_name = "worker#{i+1}"
        config.vm.define machine_name do |subconfig|
            subconfig.vm.box = "ubuntu/bionic64"
            subconfig.vm.hostname = machine_name

            subconfig.vm.network "private_network", ip: "192.168.99.10#{i+1}", virtualbox__intnet: "intnet1"

            subconfig.vm.provider "virtualbox" do |v|
                v.name = machine_name
            end
        end
    end

    config.vm.provision :ansible do |ansible|
        ansible.become = true
        ansible.groups = {
            "cluster" => ["manager1", "worker1", "worker2"]
        }

        # Disable default limit to connect to all the machines
        ansible.limit = "all"
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "playbook.yml"
        ansible.version = "latest"
        ansible.extra_vars = {
            ansible_python_interpreter: "/usr/bin/python3"
        }
    end
end

